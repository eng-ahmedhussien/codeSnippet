<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string></string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>//
//  CustomTablBarVC.swift
//  Pizza_app
//
//  Created by Ahmed Hussien on 21/03/2023.
//

import UIKit

class CustomTablBarController: UITabBarController {

    override func viewDidLoad() {
        super.viewDidLoad()
        // to add custom tabbar programtly must write self.setValue(CustomTabBar(), forKey: "tabBar")
        self.setValue(CustomTabBar(), forKey: "tabBar")
        setupTabBarViewControllers()
        
    }
    
    enum tabBarItems:Int,CaseIterable{
        case Home
        case pizzaMaker
        case cart
    }
    
    func setupTabBarViewControllers(){
        
        self.viewControllers = tabBarItems.allCases.map({
            return viewControllerInTabBar(item: $0)
        })
        
        tabBar.items?[tabBarItems.pizzaMaker.rawValue].isEnabled = false
        //setup tabBar item UI
        tabBar.tintColor = #colorLiteral(red: 0.1411764771, green: 0.3960784376, blue: 0.5647059083, alpha: 1)
        tabBar.unselectedItemTintColor =  #colorLiteral(red: 0.5725490451, green: 0, blue: 0.2313725501, alpha: 1)
        
        
    }
    
    func viewControllerInTabBar(item:tabBarItems)-&gt;UIViewController{
        switch item{
        case .Home:
            let vc = HomeVC()
            vc.tabBarItem = setupViewControllerInTabBar(item:item)
            //vc.tabBarItem = .init(title: "Home", image: UIImage(systemName: "homekit"), selectedImage: UIImage(systemName: "homekit"))
            return vc
        case .pizzaMaker:
            let vc = HomeVC()
           // vc.tabBarItem = setupViewControllerInTabBar(item:item)
            return vc
        case .cart:
            let vc = HomeVC()
            vc.tabBarItem = setupViewControllerInTabBar(item:item)
            return vc
        }
    }
    
    func setupViewControllerInTabBar(item:tabBarItems)-&gt;UITabBarItem{
        //An object that describes an item in a tab bar.
        var tabBarItem :UITabBarItem
        
        switch item{
        case .Home:
            tabBarItem = .init(title: "Home", image: UIImage(systemName: "homekit"), selectedImage: UIImage(systemName: "homekit"))
        case .pizzaMaker:
            tabBarItem = .init(title: "Home", image: UIImage(systemName: "homekit"), selectedImage: UIImage(systemName: "homekit"))
        case .cart:
            tabBarItem = .init(title: "cart", image: UIImage(systemName: "cart"), selectedImage: UIImage(systemName: "homekit"))
        }
        //setup tabBar item UI
        tabBarItem.titlePositionAdjustment = .init(horizontal: 0, vertical: 15)
        tabBarItem.imageInsets = .init(top: 10, left: 0, bottom: -10, right: 0)
        return tabBarItem
    }

}
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>8247D6A0-F7E2-43AE-9B54-4C51F725889F</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string></string>
	<key>IDECodeSnippetTitle</key>
	<string>CustomTabBarController</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
