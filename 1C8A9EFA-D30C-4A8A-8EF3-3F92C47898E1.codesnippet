<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string></string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>import Foundation
//MARK: - url by func 
struct Url {
    static let shared = Url()
    let baseURL = "http://40.127.194.127:5656/Salamtak/GetMedicationItems"
    let param  = [
        "indexFrom" : "1",
        "indexTo" : "10",
        "serchKey" : "pan"
    ]
    
    func getAllUsers()-&gt; URL?{
        return URL(string: baseURL + "user")
    }
    func getAllPosts()-&gt; URL?{
        return URL(string: baseURL + "post")
    }

}
//MARK: - url by endpoint
struct UrlServices {
    var endPoint: String = ""
    var URL : String{
        return "http://40.127.194.127:5656/Salamtak/GetMedicationItems\(endPoint)"
    }

}

//MARK: - url by enum 

enum Endpoints {
    private var baseURL: String { return "https://7d67dd63dc90e18fce08d1f7746e9f41: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@ios-q3-mansoura.myshopify.com/admin/api/2022-01/" }
    
    case smart_collections  // brands
    case Products
    case customers
    case orders
    
    case getLoginPath
    case getCurrency
    case getAddressForCustomer(String)
    case addAddress(String)
    case deleteAddress(String,String)
    case getDiscount(String)
    case deleteDiscount(String,String)
    case getProductsByCategory(String)
    case getOrdersUser(String)
    
    private var fullPath: String {
        var endpoint:String
        switch self {
        case .getLoginPath:
            endpoint = "account/login"
        case .getCurrency:
            return "https://api.currencyapi.com/v3/latest?apikey=PtNixexh5FlMMVO0gzlvNt7Lx9s8nUJ1cvq2u8dK&amp;currencies=EGP"
        case .getAddressForCustomer(let customerID):
            endpoint = "customers/\(customerID)/addresses.json"
        case .addAddress(let id):
            endpoint = "customers/\(id).json"
        case .deleteAddress(let customerID,let id):
            endpoint = "customers/\(customerID)/addresses/\(id).json"
        case .getDiscount(let priceRuleId):
            endpoint = "price_rules/\(priceRuleId)/discount_codes.json"
        case .deleteDiscount(let priceRuleId,let discountCodeId):
            endpoint =  "price_rules/\(priceRuleId)/discount_codes/\(discountCodeId).json"
        case .getProductsByCategory(let collectionId):
            endpoint = "products.json?collection_id=\(collectionId)"
        case .getOrdersUser(let customerId):
            endpoint = "customers/\(customerId)/orders.json"
        default:
            endpoint = "\(String(describing: self)).json"
        }
        return baseURL + endpoint
    }
    
    var url: URL {
        guard let url = URL(string: fullPath) else {
            preconditionFailure("The url used in \(Endpoints.self) is not valid")
        }
        return url
    }
}
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>1C8A9EFA-D30C-4A8A-8EF3-3F92C47898E1</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string></string>
	<key>IDECodeSnippetTitle</key>
	<string>url singleton</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
